version: "3.7"

services:
  reverse-proxy:
    image: "jwilder/nginx-proxy:alpine"
    container_name: "reverse-proxy"
    environment:
      - DEFAULT_HOST=grafana.local
      - CERT_NAME=shared
    volumes:
      # - "html:/usr/share/nginx/html"
      # - "dhparam:/etc/nginx/dhparam"
      # - "vhost:/etc/nginx/vhost.d"
      - /home/gary/development/docker/prometheus-monitoring-stack/certs:/etc/nginx/certs
      - "/run/docker.sock:/tmp/docker.sock:ro"
    restart: "always"
    ports:
      - "80:80"
      - "443:443"

  grafana:
    image: grafana/grafana
    container_name: "grafana"
    environment:
      - CERT_NAME=shared
      - VIRTUAL_HOST=grafana.local
      - GF_LOG_LEVEL=debug
      - GF_SECURITY_ALLOW_EMBEDDING=true
      - GF_USERS_ALLOW_SIGN_UP=false"
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_BASIC_ENABLED=false
    ports:
      - 3000
    volumes:
      - /home/gary/development/docker/prometheus-monitoring-stack/certs:/etc/ssl/certs:ro
      - grafana_data:/var/lib/grafana

  prometheus:
    image: prom/prometheus:v2.19.0
    container_name: "prometheus"
    volumes:
      - /home/gary/development/docker/prometheus-monitoring-stack/certs:/etc/ssl/certs:ro
      - prometheus_data:/prometheus
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
    environment:
      - CERT_NAME=shared
      - VIRTUAL_HOST=prom.local
    ports:
      - 9090
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"

volumes:
  prometheus_data:
  grafana_data:
  certs:
